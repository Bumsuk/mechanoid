/*
 * Generated by Robotoworks Mechanoid
 */
package com.robotoworks.mechanoid.example.flickr.content;

import android.content.ContentValues;
import android.net.Uri;
import android.provider.BaseColumns;

public class FlickrContract  {
    public static final String CONTENT_AUTHORITY = "com.robotoworks.mechanoid.example.flickr.content.flickr";

    private static final Uri BASE_CONTENT_URI = Uri.parse("content://" + CONTENT_AUTHORITY);

	interface InterestingnessColumns {
		String PHOTO_ID = "photo_id";
		String OWNER = "owner";
		String SECRET = "secret";
		String SERVER = "server";
		String FARM = "farm";
		String TITLE = "title";
		String IS_PUBLIC = "is_public";
		String IS_FRIEND = "is_friend";
		String IS_FAMILY = "is_family";
	}
	

			
	public static class Interestingness implements InterestingnessColumns, BaseColumns {
	    public static final Uri CONTENT_URI = 
				BASE_CONTENT_URI.buildUpon().appendPath("interestingness").build();
	
	    public static final String CONTENT_TYPE =
	            "vnd.android.cursor.dir/vnd.flickr.interestingness";
	    public static final String ITEM_CONTENT_TYPE =
	            "vnd.android.cursor.item/vnd.flickr.interestingness";
	
	    public static Uri buildGetByIdUri(String id) {
	        return CONTENT_URI.buildUpon().appendPath(id).build();
	    }
	
		public static ContentValues createContentValues(String photoId, String owner, String secret, String server, long farm, String title, long isPublic, long isFriend, long isFamily) {
			ContentValues values = new ContentValues();
			values.put(Interestingness.PHOTO_ID, photoId);
			values.put(Interestingness.OWNER, owner);
			values.put(Interestingness.SECRET, secret);
			values.put(Interestingness.SERVER, server);
			values.put(Interestingness.FARM, farm);
			values.put(Interestingness.TITLE, title);
			values.put(Interestingness.IS_PUBLIC, isPublic);
			values.put(Interestingness.IS_FRIEND, isFriend);
			values.put(Interestingness.IS_FAMILY, isFamily);
			return values;
		}
	}
	


	private FlickrContract(){}
}
